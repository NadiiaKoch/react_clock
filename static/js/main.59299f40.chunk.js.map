{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","timerId","this","window","setInterval","setState","console","info","toUTCString","slice","prevProps","clockName","props","debug","clearInterval","Typography","sx","color","variant","align","className","React","Component","getRandomName","value","now","toString","App","hasClock","handleClick","handleContextmenu","event","preventDefault","document","addEventListener","removeEventListener","ReactDOM","render","getElementById"],"mappings":"gOAWaA,EAAb,4MACEC,MAAQ,CACNC,KAAM,IAAIC,MAFd,EAKEC,QAAU,EALZ,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEN,KAAM,IAAIC,OAE1BM,QAAQC,KAAK,EAAKT,MAAMC,KAAKS,cAAcC,OAAO,IAAK,MACtD,OAZP,gCAeE,SAAmBC,GACbA,EAAUC,YAAcT,KAAKU,MAAMD,WAErCL,QAAQO,MAAR,uBAA8BH,EAAUC,UAAxC,eAAwDT,KAAKU,MAAMD,cAlBzE,kCAsBE,WACER,OAAOW,cAAcZ,KAAKD,WAvB9B,oBA0BE,WACE,IAAQU,EAAcT,KAAKU,MAAnBD,UACAZ,EAASG,KAAKJ,MAAdC,KAER,OACE,cAACgB,EAAA,EAAD,CACEC,GAAI,CACFC,MAAO,SAETC,QAAQ,KACRC,MAAM,SALR,SAOE,sBAAKC,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGT,IAGF,YAED,sBAAMS,UAAU,cAAhB,SACGrB,EAAKS,cAAcC,OAAO,IAAK,cA9C5C,GAA2BY,IAAMC,WCLjC,SAASC,IACP,IAAMC,EAAQxB,KAAKyB,MAAMC,WAAWjB,OAAO,GAE3C,MAAM,SAAN,OAAgBe,GAQX,IAAMG,EAAb,4MACE7B,MAAQ,CACN8B,UAAU,EACVjB,UAAW,WAHf,EAMEV,QAAU,EANZ,EAuBE4B,YAAc,WACZ,EAAKxB,SAAS,CAAEuB,UAAU,KAxB9B,EA2BEE,kBAAoB,SAACC,GACnBA,EAAMC,iBACN,EAAK3B,SAAS,CAAEuB,UAAU,KA7B9B,uDAQE,WAAqB,IAAD,OAClBK,SAASC,iBAAiB,cAAehC,KAAK4B,mBAC9CG,SAASC,iBAAiB,QAAShC,KAAK2B,aAExC3B,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEM,UAAWY,QAC1B,QAdP,kCAiBE,WACEpB,OAAOW,cAAcZ,KAAKD,SAC1BgC,SAASE,oBAAoB,cAAejC,KAAK4B,mBACjDG,SAASE,oBAAoB,QAASjC,KAAK2B,eApB/C,oBAgCE,WACE,MAGI3B,KAAKJ,MAFP8B,EADF,EACEA,SACAjB,EAFF,EAEEA,UAGF,OACE,sBAAKS,UAAU,MAAf,UACE,cAACL,EAAA,EAAD,CACEC,GAAI,CACFC,MAAO,UAETC,QAAQ,KACRC,MAAM,SALR,SAMC,gBAIAS,GAAY,cAAC,EAAD,CAAOjB,UAAWA,WAlDvC,GAAyBW,aCdzBc,IAASC,OACP,cAAC,EAAD,IACAJ,SAASK,eAAe,W","file":"static/js/main.59299f40.chunk.js","sourcesContent":["import React from 'react';\nimport { Typography } from '@mui/material';\n\ntype Props = {\n  clockName: string;\n};\n\ntype State = {\n  date: Date;\n};\n\nexport class Clock extends React.Component<Props, State> {\n  state = {\n    date: new Date(),\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      this.setState({ date: new Date() });\n      // eslint-disable-next-line no-console\n      console.info(this.state.date.toUTCString().slice(-12, -4));\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Readonly<Props>) {\n    if (prevProps.clockName !== this.props.clockName) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevProps.clockName} to ${this.props.clockName}`);\n    }\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerId);\n  }\n\n  render() {\n    const { clockName } = this.props;\n    const { date } = this.state;\n\n    return (\n      <Typography\n        sx={{\n          color: 'Green',\n        }}\n        variant=\"h4\"\n        align=\"center\"\n      >\n        <div className=\"Clock\">\n          <strong className=\"Clock__name\">\n            {clockName}\n          </strong>\n\n          {' time is '}\n\n          <span className=\"Clock__time\">\n            {date.toUTCString().slice(-12, -4)}\n          </span>\n        </div>\n      </Typography>\n    );\n  }\n}\n","import { Component } from 'react';\nimport './App.scss';\nimport { Typography } from '@mui/material';\n\nimport { Clock } from './components/Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  hasClock: boolean,\n  clockName: string,\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    document.addEventListener('contextmenu', this.handleContextmenu);\n    document.addEventListener('click', this.handleClick);\n\n    this.timerId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerId);\n    document.removeEventListener('contextmenu', this.handleContextmenu);\n    document.removeEventListener('click', this.handleClick);\n  }\n\n  handleClick = () => {\n    this.setState({ hasClock: true });\n  };\n\n  handleContextmenu = (event: MouseEvent) => {\n    event.preventDefault();\n    this.setState({ hasClock: false });\n  };\n\n  render() {\n    const {\n      hasClock,\n      clockName,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <Typography\n          sx={{\n            color: 'Purple',\n          }}\n          variant=\"h1\"\n          align=\"center\"\n        >\n          React clock\n        </Typography>\n\n        {hasClock && <Clock clockName={clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}